@using JW.Order.Web.Models;
@model RoleDetail
@{
    ViewBag.Title = "系统日志";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="settings">
    <div class="column">
        <div class="field">
            <div class="label">开始</div>
            <div class="value">
                @(Html.DevExtreme().DateBox()
                    .ID("dateB")
                    .Type(DateBoxType.Date)
                    .ShowClearButton(true)
                    .DisplayFormat("yyyy-MM-dd")
                )
            </div>
        </div>
        <div class="field">
            <div class="label">结束</div>
            <div class="value">
                @(Html.DevExtreme().DateBox()
                    .ID("dateE")
                    .Type(DateBoxType.Date)
                    .ShowClearButton(true)
                    .DisplayFormat("yyyy-MM-dd")
                )
            </div>
        </div>
    </div>
    <div class="column">
        <div class="field">
            <div class="label">类型</div>
            <div class="value">
                @(Html.DevExtreme().TagBox()
                    .ID("txtLogType")
                    .MaxDisplayedTags(2)
                    .ShowClearButton(true)
                    .ShowSelectionControls(true)
                    .ApplyValueMode(EditorApplyValueMode.UseButtons)
                    .Placeholder("不选择视为全部")
                    .DataSource(d => d.Mvc().LoadAction("LogTypeList").Key("LogSortName"))
                    .DisplayExpr("LogSortName")
                    .ValueExpr("LogSortName")
                )
            </div>
        </div>
        <div class="field">
            <div class="label">事件</div>
            <div class="value">
                @(Html.DevExtreme().TagBox()
                    .ID("txtLogAction")
                    .MaxDisplayedTags(2)
                    .ShowClearButton(true)
                    .ShowSelectionControls(true)
                    .ApplyValueMode(EditorApplyValueMode.UseButtons)
                    .Placeholder("不选择视为全部")
                    .DataSource(d => d.Mvc().LoadAction("LogActionList").Key("LogSortName"))
                    .DisplayExpr("LogSortName")
                    .ValueExpr("LogSortName")
                )
            </div>
        </div>
    </div>
    <div class="column">
        <div class="field">
            <div class="label">类型</div>
            <div class="value">
                @(Html.DevExtreme().TextBox()
                    .ID("txtLike")
                    .Placeholder("模糊查找")
                    .ShowClearButton(true)
                )
            </div>
        </div>
        <div class="field">
            <div class="label">结果</div>
            <div class="value">
                @(Html.DevExtreme().RadioGroup()
                    .ID("rgBool")
                    .DataSource(d=>d.WebApi().RouteName("CommonApi").LoadAction("BoolList").Key("ID"))
                    .ValueExpr("ID")
                    .DisplayExpr("Name")
                    .Value(2)
                    .Layout(Orientation.Horizontal)
                )
            </div>
        </div>
    </div>
    <div class="column">
        <div class="field">
            <div class="label"></div>
            <div class="value">
            </div>
        </div>
        <div class="field">
            <div class="label"></div>
            <div class="value">
                @(Html.DevExtreme().Button()
                    .ID("btnQuery")
                    .Text("查询")
                    .Icon("find")
                    .Disabled(!Model.InQuery)
                    .Type(ButtonType.Default)
                    .StylingMode(ButtonStylingMode.Contained)
                    .Width(100)
                    .OnClick("toQuery")
                )
            </div>
        </div>
    </div>
</div>
<br />
@(Html.DevExtreme().DataGrid().ShowBorders(true)
    //.DataSource(d => d.Mvc().Key("RoleID").LoadAction("GetRoleList"))
    .Columns(col=> {
        col.Add().DataField("LogType").Caption("类型");
        col.Add().DataField("LogAction").Caption("事件");
        col.Add().DataField("Result").Caption("结果");
        col.Add().DataField("BizData").Caption("执行情况").ShowEditorAlways(true);
        col.Add().DataField("NewData").Caption("新数据").Width(300).MinWidth(100).ShowEditorAlways(true);
        col.Add().DataField("OldData").Caption("源数据").Width(300).MinWidth(100).ShowEditorAlways(true);
        col.Add().DataField("DateBegin").Caption("开始");
        col.Add().DataField("DateEnd").Caption("结束");
    })
    .ID("targetDataGrid")
    .Paging(p => p.PageSize(20))
    .ColumnAutoWidth(true)
    .ShowRowLines(true)
    .RowAlternationEnabled(true)
    .SearchPanel(searchPanel => searchPanel
        .Visible(true)
        .Width(240)
        .Placeholder("表内查找")
    )
    .HeaderFilter(headerFilter => headerFilter.Visible(true))
//.OnSelectionChanged("selection_changed")
)
<script>
    function getDataGridInstance() {
        return $("#targetDataGrid").dxDataGrid("instance");
    }

    function toQuery() {
        var grid = getDataGridInstance();
        var infiniteListSource = new DevExpress.data.DataSource({
            load: function (loadOptions) {
                var dateb = $("#dateB").dxDateBox("option", "text");
                var datee = $("#dateE").dxDateBox("option", "text");
                var txtLogType = $("#txtLogType").dxTagBox("option", "value");
                var txtLogAction = $("#txtLogAction").dxTagBox("option", "value");
                var txtLike = $("#txtLike").dxTextBox("option", "text");
                var rgBool = $("#rgBool").dxRadioGroup("option", "value");
                return $.getJSON("/home/GetLogList", { "dateb": dateb, "datee": datee, "logtype": txtLogType.toString(), "logaction": txtLogAction.toString(), "result": rgBool, "like": txtLike });
            },
            map: function (dataItem) {
                dataItem.Result = toBool(dataItem.Result);
                return dataItem;
            }
        });
        grid.option("dataSource", infiniteListSource);
        grid.refresh();
    }
</script>

